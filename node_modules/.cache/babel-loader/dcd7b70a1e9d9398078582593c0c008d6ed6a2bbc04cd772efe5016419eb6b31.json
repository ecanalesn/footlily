{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Estefania\\\\Desktop\\\\ESTEFANIA\\\\proyectosdev\\\\footlily\\\\src\\\\contexts\\\\ShoppingCartContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const ShoppingCartContext = /*#__PURE__*/createContext();\nexport const useShoppingCart = () => {\n  _s();\n  const context = useContext(ShoppingCartContext);\n  if (!context) {\n    throw new Error('useShoppingCart must be used within a ShoppingCartProvider');\n  }\n  return context;\n};\n_s(useShoppingCart, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nexport const ShoppingCartProvider = ({\n  children\n}) => {\n  _s2();\n  const [cartItems, setCartItems] = useState([]);\n  const [isProcessingOrder, setIsProcessingOrder] = useState(false);\n\n  // Load cart from localStorage on component mount\n  useEffect(() => {\n    const savedCart = localStorage.getItem('shopping-cart');\n    if (savedCart) {\n      setCartItems(JSON.parse(savedCart));\n    }\n  }, []);\n\n  // Save cart to localStorage whenever cartItems changes\n  useEffect(() => {\n    localStorage.setItem('shopping-cart', JSON.stringify(cartItems));\n  }, [cartItems]);\n  const addToCart = product => {\n    setCartItems(prevItems => {\n      const existingItem = prevItems.find(item => item.id === product.id);\n      if (existingItem) {\n        return prevItems.map(item => item.id === product.id ? {\n          ...item,\n          quantity: item.quantity + 1\n        } : item);\n      } else {\n        return [...prevItems, {\n          ...product,\n          quantity: 1\n        }];\n      }\n    });\n  };\n  const removeFromCart = productId => {\n    setCartItems(prevItems => prevItems.filter(item => item.id !== productId));\n  };\n  const updateQuantity = (productId, quantity) => {\n    if (quantity <= 0) {\n      removeFromCart(productId);\n      return;\n    }\n    setCartItems(prevItems => prevItems.map(item => item.id === productId ? {\n      ...item,\n      quantity\n    } : item));\n  };\n  const clearCart = () => {\n    setCartItems([]);\n  };\n  const getTotalItems = () => {\n    return cartItems.reduce((total, item) => total + item.quantity, 0);\n  };\n  const getTotalPrice = () => {\n    return cartItems.reduce((total, item) => total + item.price * item.quantity, 0);\n  };\n\n  // Crear pedido usando la API\n  const createOrder = async customerData => {\n    try {\n      setIsProcessingOrder(true);\n      const orderData = {\n        customer_name: customerData.name,\n        customer_email: customerData.email,\n        shipping_address: customerData.address,\n        payment_method: customerData.payment_method || 'card',\n        items: cartItems.map(item => ({\n          product_id: item.id,\n          quantity: item.quantity\n        }))\n      };\n      const response = await orderService.create(orderData);\n      if (response.success) {\n        return {\n          success: true,\n          order: response.data.order,\n          message: response.message\n        };\n      } else {\n        throw new Error(response.message || 'Error al crear el pedido');\n      }\n    } catch (error) {\n      console.error('Error creating order:', error);\n      return {\n        success: false,\n        message: error.message || 'Error al crear el pedido'\n      };\n    } finally {\n      setIsProcessingOrder(false);\n    }\n  };\n\n  // Simular pago usando la API\n  const simulatePayment = async (orderId, paymentData) => {\n    try {\n      setIsProcessingOrder(true);\n      const response = await orderService.simulatePayment(orderId, paymentData);\n      if (response.success) {\n        return {\n          success: true,\n          message: response.message,\n          data: response.data\n        };\n      } else {\n        return {\n          success: false,\n          message: response.message,\n          code: response.code\n        };\n      }\n    } catch (error) {\n      console.error('Error simulating payment:', error);\n      return {\n        success: false,\n        message: error.message || 'Error al procesar el pago'\n      };\n    } finally {\n      setIsProcessingOrder(false);\n    }\n  };\n  const value = {\n    cartItems,\n    isProcessingOrder,\n    addToCart,\n    removeFromCart,\n    updateQuantity,\n    clearCart,\n    getTotalItems,\n    getTotalPrice,\n    createOrder,\n    simulatePayment\n  };\n  return /*#__PURE__*/_jsxDEV(ShoppingCartContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 160,\n    columnNumber: 5\n  }, this);\n};\n_s2(ShoppingCartProvider, \"nUc+WAmKDPbiQeGC4wpI36vKBpM=\");\n_c = ShoppingCartProvider;\nvar _c;\n$RefreshReg$(_c, \"ShoppingCartProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","jsxDEV","_jsxDEV","ShoppingCartContext","useShoppingCart","_s","context","Error","ShoppingCartProvider","children","_s2","cartItems","setCartItems","isProcessingOrder","setIsProcessingOrder","savedCart","localStorage","getItem","JSON","parse","setItem","stringify","addToCart","product","prevItems","existingItem","find","item","id","map","quantity","removeFromCart","productId","filter","updateQuantity","clearCart","getTotalItems","reduce","total","getTotalPrice","price","createOrder","customerData","orderData","customer_name","name","customer_email","email","shipping_address","address","payment_method","items","product_id","response","orderService","create","success","order","data","message","error","console","simulatePayment","orderId","paymentData","code","value","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Estefania/Desktop/ESTEFANIA/proyectosdev/footlily/src/contexts/ShoppingCartContext.js"],"sourcesContent":["import React, { createContext, useContext, useState, useEffect } from 'react';\r\n\r\nexport const ShoppingCartContext = createContext();\r\n\r\nexport const useShoppingCart = () => {\r\n  const context = useContext(ShoppingCartContext);\r\n  if (!context) {\r\n    throw new Error('useShoppingCart must be used within a ShoppingCartProvider');\r\n  }\r\n  return context;\r\n};\r\n\r\nexport const ShoppingCartProvider = ({ children }) => {\r\n  const [cartItems, setCartItems] = useState([]);\r\n  const [isProcessingOrder, setIsProcessingOrder] = useState(false);\r\n\r\n  // Load cart from localStorage on component mount\r\n  useEffect(() => {\r\n    const savedCart = localStorage.getItem('shopping-cart');\r\n    if (savedCart) {\r\n      setCartItems(JSON.parse(savedCart));\r\n    }\r\n  }, []);\r\n\r\n  // Save cart to localStorage whenever cartItems changes\r\n  useEffect(() => {\r\n    localStorage.setItem('shopping-cart', JSON.stringify(cartItems));\r\n  }, [cartItems]);\r\n\r\n  const addToCart = (product) => {\r\n    setCartItems(prevItems => {\r\n      const existingItem = prevItems.find(item => item.id === product.id);\r\n      \r\n      if (existingItem) {\r\n        return prevItems.map(item =>\r\n          item.id === product.id\r\n            ? { ...item, quantity: item.quantity + 1 }\r\n            : item\r\n        );\r\n      } else {\r\n        return [...prevItems, { ...product, quantity: 1 }];\r\n      }\r\n    });\r\n  };\r\n\r\n  const removeFromCart = (productId) => {\r\n    setCartItems(prevItems => prevItems.filter(item => item.id !== productId));\r\n  };\r\n\r\n  const updateQuantity = (productId, quantity) => {\r\n    if (quantity <= 0) {\r\n      removeFromCart(productId);\r\n      return;\r\n    }\r\n    \r\n    setCartItems(prevItems =>\r\n      prevItems.map(item =>\r\n        item.id === productId\r\n          ? { ...item, quantity }\r\n          : item\r\n      )\r\n    );\r\n  };\r\n\r\n  const clearCart = () => {\r\n    setCartItems([]);\r\n  };\r\n\r\n  const getTotalItems = () => {\r\n    return cartItems.reduce((total, item) => total + item.quantity, 0);\r\n  };\r\n\r\n  const getTotalPrice = () => {\r\n    return cartItems.reduce((total, item) => total + (item.price * item.quantity), 0);\r\n  };\r\n\r\n  // Crear pedido usando la API\r\n  const createOrder = async (customerData) => {\r\n    try {\r\n      setIsProcessingOrder(true);\r\n      \r\n      const orderData = {\r\n        customer_name: customerData.name,\r\n        customer_email: customerData.email,\r\n        shipping_address: customerData.address,\r\n        payment_method: customerData.payment_method || 'card',\r\n        items: cartItems.map(item => ({\r\n          product_id: item.id,\r\n          quantity: item.quantity\r\n        }))\r\n      };\r\n\r\n      const response = await orderService.create(orderData);\r\n      \r\n      if (response.success) {\r\n        return {\r\n          success: true,\r\n          order: response.data.order,\r\n          message: response.message\r\n        };\r\n      } else {\r\n        throw new Error(response.message || 'Error al crear el pedido');\r\n      }\r\n    } catch (error) {\r\n      console.error('Error creating order:', error);\r\n      return {\r\n        success: false,\r\n        message: error.message || 'Error al crear el pedido'\r\n      };\r\n    } finally {\r\n      setIsProcessingOrder(false);\r\n    }\r\n  };\r\n\r\n  // Simular pago usando la API\r\n  const simulatePayment = async (orderId, paymentData) => {\r\n    try {\r\n      setIsProcessingOrder(true);\r\n      \r\n      const response = await orderService.simulatePayment(orderId, paymentData);\r\n      \r\n      if (response.success) {\r\n        return {\r\n          success: true,\r\n          message: response.message,\r\n          data: response.data\r\n        };\r\n      } else {\r\n        return {\r\n          success: false,\r\n          message: response.message,\r\n          code: response.code\r\n        };\r\n      }\r\n    } catch (error) {\r\n      console.error('Error simulating payment:', error);\r\n      return {\r\n        success: false,\r\n        message: error.message || 'Error al procesar el pago'\r\n      };\r\n    } finally {\r\n      setIsProcessingOrder(false);\r\n    }\r\n  };\r\n\r\n  const value = {\r\n    cartItems,\r\n    isProcessingOrder,\r\n    addToCart,\r\n    removeFromCart,\r\n    updateQuantity,\r\n    clearCart,\r\n    getTotalItems,\r\n    getTotalPrice,\r\n    createOrder,\r\n    simulatePayment\r\n  };\r\n\r\n  return (\r\n    <ShoppingCartContext.Provider value={value}>\r\n      {children}\r\n    </ShoppingCartContext.Provider>\r\n  );\r\n};\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}